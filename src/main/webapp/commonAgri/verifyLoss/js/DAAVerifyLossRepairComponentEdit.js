/*****************************************************************************
 * DESC       ：修理换件增加JS
 * AUTHOR     ：liubvo
 * CREATEDATE ： 2004-08-10
 * MODIFYLIST ：   Name       Date            Reason/Contents
 *          ------------------------------------------------------
 ****************************************************************************/
     
 /**
  在表格下方添加一组数据，禁止非本模块调用
  参数为页代码名称和页原始数据代码名称
  例:insertRow("Engage","Engage_Data");
  返回插入行的序号（从1开始）
  */
function insertRowTableRepairFee(pageCode,dataPageCode,field)
{
  var index = 0;  //当前table索引
  var elements = null; 
  index = getElementOrder(field)-1;
  var oTBODY = document.getElementsByName(pageCode)[index].tBodies.item(0);
  var oTBODYData = document.getElementById(dataPageCode).tBodies.item(0);
  elements = oTBODY.getElementsByTagName("INPUT");
  
  for(var i=0;i<oTBODYData.rows.length;i++) 
  {
    oTBODY.appendChild(oTBODYData.rows[i].cloneNode(true)); 
  }
/*
  for(var i=0;i<elements.length;i++)
  {
  	if(elements[i].name=="carLossRepairFeeLossItemCode")
  	{
  		elements[i].value = index;
  	} 
  }
  */
  return true;
}

/**
  删除控制按钮控制的行，禁止非本模块调用
  字段，页名称，数据页中控制按钮的个数，数据页中每个控制按钮的控制的TR的个数
  返回删除行的序号（从1开始）
 */
function deleteRowTableRepairFee(field,pageCode,pageDataRowsCount,controlRowsCount)
{
  recentDeletedRowNo = parseInt(getElementOrder(field));
  var pageSerialNo = 0 ;
  pageSerialNo = parseInt(fm.carLossRepairFeeLossItemCode(recentDeletedRowNo-1).value);
  var order = recentDeletedRowNo - 1;  //顺序改为以0开始
  var oTBODY   = document.getElementsByName(pageCode)[pageSerialNo].tBodies.item(0);
  order = getRowCurrPageRepairFee(field,pageCode);
  //alert("order="+order);
  //order = order - pageDataRowsCount;  //去掉隐含域中的控制按钮的个数
  for(var i=0;i<controlRowsCount;i++)
  {
    oTBODY.removeChild(oTBODY.rows[order*controlRowsCount]);
  }
  return recentDeletedRowNo-1; 
}

//得到当前的行所在当前页位置
function getRowCurrPageRepairFee(field,DataPageCode)
{
  var i = 0;
  var name = "";
  var elements;
  var fieldName = "";
  var countLoss = 0 ;        //人员费用的记录数
  var firstIndexLoss = 0 ;   //本人员的费用的起始index
  var recentRowNo =  0;
  var orderCurrent = 0  ;    //当前行所在当前面的位置
  recentRowNo = parseInt(getElementOrder(field));
  var pageSerialNo = 0 ;
  pageSerialNo = parseInt(fm.carLossRepairFeeLossItemCode(recentRowNo-1).value);
  //index--; //顺序改为以0开始
  //得到Input域的名字
  elements = getTableElements("RepairComponent");
    
  for(i=0;i<elements.length;i++) 
  {
  	//得到人员费用索引起始位置及人员费用的记录数
  	if(elements[i].name  == "carLossRepairFeeLossItemCode")
  	{
      //alert("pageSerialNo="+pageSerialNo+"|" + elements[i].value);
       
  		if(parseInt(elements[i].value)==pageSerialNo)
  		{
  			countLoss = countLoss + 1;
  			if(firstIndexLoss==0)
  			{
  				firstIndexLoss = getElementOrder(elements[i]);
  			} 
  		}
  	}
  }

  //alert("recentRowNo="+recentRowNo);
  //alert("firstIndexLoss="+firstIndexLoss);
  orderCurrent = recentRowNo - firstIndexLoss;
  return orderCurrent;
}








    
 /**
  在表格下方添加一组数据，禁止非本模块调用
  参数为页代码名称和页原始数据代码名称
  例:insertRow("Engage","Engage_Data");
  返回插入行的序号（从1开始）
  */
function insertRowTableComponent(pageCode,dataPageCode,field)
{
  var index = 0;  //当前table索引
  var elements = null;
  index = getElementOrder(field)-1;
  var oTBODY = document.getElementsByName(pageCode)[index].tBodies.item(0);
  var oTBODYData = document.getElementById(dataPageCode).tBodies.item(0);
  elements = oTBODY.getElementsByTagName("INPUT");
  //modify liuyanmei 20060223 start 核损超出60行太慢---------------
     var oldelementNumber= elements.length;
   //modify liuyanmei 20060223 end 核损超出60行太慢---------------
  for(var i=0;i<oTBODYData.rows.length;i++) 
  {
    oTBODY.appendChild(oTBODYData.rows[i].cloneNode(true)); 
  }
  
  //modify liuyanmei 20060223 start 核损超出60行太慢---------------
  //for(var i=0;i<elements.length;i++)  
   for(var i=oldelementNumber;i<elements.length;i++)
   //modify liuyanmei 20060223 end 核损超出60行太慢---------------
  {
  	if(elements[i].name=="carLossComponentLossItemCode")
  	{
  		elements[i].value = index;
  	} 
  } 
  return true;
}

/**
  删除控制按钮控制的行，禁止非本模块调用
  字段，页名称，数据页中控制按钮的个数，数据页中每个控制按钮的控制的TR的个数
  返回删除行的序号（从1开始）
 */
function deleteRowTableComponent(field,pageCode,pageDataRowsCount,controlRowsCount)
{
  recentDeletedRowNo = parseInt(getElementOrder(field));
  var pageSerialNo = 0 ;
  pageSerialNo = parseInt(fm.carLossComponentLossItemCode(recentDeletedRowNo-1).value);
  var order = recentDeletedRowNo - 1;  //顺序改为以0开始
  var oTBODY   = document.getElementsByName(pageCode)[pageSerialNo].tBodies.item(0);
  order = getRowCurrPageComponent(field,pageCode);
  //alert("order="+order);
  //order = order - pageDataRowsCount;  //去掉隐含域中的控制按钮的个数
  for(var i=0;i<controlRowsCount;i++)
  {
    oTBODY.removeChild(oTBODY.rows[order*controlRowsCount]);
  }
  return recentDeletedRowNo-1; 
}

//得到当前的行所在当前页位置
function getRowCurrPageComponent(field,DataPageCode)
{
  var i = 0;
  var name = "";
  var elements;
  var fieldName = "";
  var countLoss = 0 ;        //人员费用的记录数
  var firstIndexLoss = 0 ;   //本人员的费用的起始index
  var recentRowNo =  0;
  var orderCurrent = 0  ;    //当前行所在当前面的位置
  recentRowNo = parseInt(getElementOrder(field));
  var pageSerialNo = 0 ;
  pageSerialNo = parseInt(fm.carLossComponentLossItemCode(recentRowNo-1).value);
  //index--; //顺序改为以0开始
  //得到Input域的名字
  elements = getTableElements("RepairComponent");
    
  for(i=0;i<elements.length;i++) 
  {
  	//得到人员费用索引起始位置及人员费用的记录数
  	if(elements[i].name  == "carLossComponentLossItemCode")
  	{
      //alert("pageSerialNo="+pageSerialNo+"|" + elements[i].value);
       
  		if(parseInt(elements[i].value)==pageSerialNo)
  		{
  			countLoss = countLoss + 1;
  			if(firstIndexLoss==0)
  			{
  				firstIndexLoss = getElementOrder(elements[i]);
  			} 
  		}
  	}
  } 

  //alert("recentRowNo="+recentRowNo);
  //alert("firstIndexLoss="+firstIndexLoss);
  orderCurrent = recentRowNo - firstIndexLoss;
  return orderCurrent;
}



/**
 *@description 根据按钮状态保存报案数据
 *@param       this
 *@param       保存状态
 *@return      通过返回true,否则返回false
 */	  
function saveForm(field,saveType)
{
  fm.buttonSaveType.value = saveType;
  
  //reason: ValidateData.js中的校验不起作用时，因为没有调用校验方法
 
 if(!validateForm(fm,'RepairFee_Data,Component_Data')) 
  {
    return false;
  }

  //reason:当按下某一按钮时请将这个按钮变灰，否则用户可能多按引发错误
  field.disabled = true;
  
  fm.submit();
  //return true;   	
}
